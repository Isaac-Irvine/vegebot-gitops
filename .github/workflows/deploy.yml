name: update server
on: [workflow_dispatch]
jobs:
  update_server:
    name: update server
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: shutdown server
      continue-on-error: true
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.PRODUCTION_SERVER_KEY }}
        port: ${{ secrets.PRODUCTION_SERVER_PORT }}
        script: |
          cd vegebot
          docker-compose down
    - name: copy src
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.PRODUCTION_SERVER_KEY }}
        port: ${{ secrets.PRODUCTION_SERVER_PORT }}
        rm: true
        strip_components: 1
        source: "server_src/*"
        target: "vegebot/"
    - name: add env file
      uses: appleboy/ssh-action@master
      env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          POSTGREST_JWT_SECRET: ${{ secrets.POSTGREST_JWT_SECRET }}
          POSTGREST_TOKEN: ${{ secrets.POSTGREST_TOKEN }}
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.PRODUCTION_SERVER_KEY }}
        port: ${{ secrets.PRODUCTION_SERVER_PORT }}
        envs: DISCORD_BOT_TOKEN, POSTGREST_JWT_SECRET, POSTGREST_TOKEN
        script: | # todo: generate JWT here
          cd vegebot
          echo "DISCORD_BOT_TOKEN=$DISCORD_BOT_TOKEN" > .env
          echo "POSTGRES_PASSWORD=$(openssl rand -base64 48)" >> .env
          echo "POSTGREST_JWT_SECRET=$POSTGREST_JWT_SECRET" >> .env
          echo "POSTGREST_TOKEN=$POSTGREST_TOKEN" >> .env
    - name: update and startup server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.PRODUCTION_SERVER_KEY }}
        port: ${{ secrets.PRODUCTION_SERVER_PORT }}
        script: |
          cd vegebot
          docker-compose pull
          docker-compose start

